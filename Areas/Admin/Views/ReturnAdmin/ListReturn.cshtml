@using HTQLTV.Models;
@using X.PagedList.Mvc.Core;
@model X.PagedList.IPagedList<BorrowReturn>

@{
    ViewData["Title"] = "ListBorrowReturn";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
<h1>ListReturn</h1>

<form id="searchForm" asp-action="ListReturn" class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search" method="get">
    <div class="input-group">

        <input type="number" name="ReaderId" class="form-control bg-light border-2 small" placeholder="Search for readerID..."
               aria-label="Search" aria-describedby="basic-addon2" value="@ViewData["CurrentFilter"]">
        <div class="input-group-append">
            <button class="btn btn-primary" type="submit">
                <i class="fas fa-search fa-sm"></i>
            </button>
        </div>
    </div>
    <input type="hidden" name="page" value="1" />
</form>



<p>
    <a asp-action="CreateReturn">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            @*     <th>
            @Html.DisplayNameFor(model => model.BookNumber)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.BorrowDate)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.ReturnDate)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Book)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Reader)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Staff)
            </th>
            <th>
            @Html.DisplayNameFor(model => model.Stat)
            </th>
            <th></th> *@
            <th>ID sách</th>
            <th>ID Staff</th>
            <th>ID Reader</th>
            <th>Tên sách</th>
            <th>Số sách mượn</th>
            <th>Ngày mượn</th>
            <th>Hạn trả</th>
            <th>Ngày trả</th>
            <th>Hành động</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Book.BookId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Staff.StaffId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Reader.ReaderId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Book.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BookNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.BorrowDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DueDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReturnDate)
                </td>



                @*     <td>
            @Html.DisplayFor(modelItem => item.Stat.StatId)
            </td> *@
                <td>
                    <a asp-action="Return" asp-route-id="@item.BorrowReturnId" class="btn btn-success mx-1" >Return</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <ul class="pagination pagination-sm">
        @Html.PagedListPager(Model, page => Url.Action("ListReturn", new { page }), new PagedListRenderOptions
   {
       LiElementClasses = new[] { "page-item" },
       PageClasses = new[] { "page-link" },
       UlElementClasses = new[] { "pagination", "pagination-sm" },
       ContainerDivClasses = new[] { "pagination-container" },
       DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
       DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
       DisplayLinkToFirstPage = PagedListDisplayMode.Always,
       DisplayLinkToLastPage = PagedListDisplayMode.Always,
   })
    </ul>
</div>
